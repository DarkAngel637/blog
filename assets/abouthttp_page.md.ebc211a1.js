import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.7204edfa.js";const C=JSON.parse('{"title":"http","description":"","frontmatter":{},"headers":[],"relativePath":"abouthttp/page.md","filePath":"abouthttp/page.md"}'),p={name:"abouthttp/page.md"},o=l(`<h1 id="http" tabindex="-1">http <a class="header-anchor" href="#http" aria-label="Permalink to &quot;http&quot;">​</a></h1><h2 id="缓存" tabindex="-1">缓存 <a class="header-anchor" href="#缓存" aria-label="Permalink to &quot;缓存&quot;">​</a></h2><p>都是通过 http header 实现的</p><ul><li>协商缓存 :<strong>last-modified</strong> 和 <strong>if-modified-since</strong>,或者是 <strong>E-tag</strong> 和 <strong>if-none-match</strong> 资源没变化 则返回 304 并 更新浏览器缓存有效期</li></ul><h3 id="if-none-match-和-etag" tabindex="-1">If-None-Match 和 ETag <a class="header-anchor" href="#if-none-match-和-etag" aria-label="Permalink to &quot;If-None-Match 和 ETag&quot;">​</a></h3><p>当本地缓存过期的时候，浏览器就会尝试协商缓存。协商缓存会发起请求，以验证本地副本是否可以使用。也称为再验证的过程。</p><p>· 如果验证后显示文档内容变化，浏览器会获取一份新的副本，替代旧副本，缓存在本地</p><p>· 如果验证后显示文档内容无变化，浏览器只用获取新的首部和新的过期日期</p><p>根据响应中的状态码来指明文档没有变化。304 Not Modified 验证文档内容是否变化有两种方式，统称为条件GET方法</p><h3 id="last-modified-和-if-modified-since" tabindex="-1">Last-Modified 和 If-Modified-Since <a class="header-anchor" href="#last-modified-和-if-modified-since" aria-label="Permalink to &quot;Last-Modified 和 If-Modified-Since&quot;">​</a></h3><table><thead><tr><th style="text-align:center;">第一个</th><th style="text-align:center;">第二个</th></tr></thead><tbody><tr><td style="text-align:center;">Last-Modified</td><td style="text-align:center;">If-Modified-Since</td></tr><tr><td style="text-align:center;">客户端的时间</td><td style="text-align:center;">服务端记录的第一次修改的时间</td></tr></tbody></table><p>这一对首部通过资源修改日期判断是否有变化，主要过程为：</p><ol><li><p>首次获取资源：服务器响应中添加首部Last-Modified，说明资源最近一次修改时间。浏览器保存下来这个时间</p></li><li><p>验证资源：浏览器带上If-Modified-Since首部，值就是Last-Modified返回的时间；服务器比较If-Modified-Since的时间与资源最近一次修改时间：</p></li><li><p>如果最近一次修改时间小于If-Modified-Since的时间，则返回304响应，响应中也会有cache-control、expires、Date首部；</p></li><li><p>如果最近一次修改时间大于If-Modified-Since的时间，则返回新资源，并且更新所对应的全部首部，包括cache-control、expires、Date</p></li></ol><ul><li>强缓存 : 强缓存通过HTTP 首部：<strong>cache-control 和 Expires</strong>管理</li></ul><blockquote><p>Cache-control有max-age、s-maxage、no-cache、no-store、private、public这六个属性。</p><ul><li>max-age决定客户端资源被缓存多久。</li><li>s-maxage决定代理服务器缓存的时长。</li><li>no-cache表示是强制进行协商缓存。</li><li>no-store是表示禁止任何缓存策略。</li><li>public表示资源即可以被浏览器缓存也可以被代理服务器缓存。</li><li>private表示资源只能被浏览器缓存。</li></ul></blockquote><h2 id="websocket" tabindex="-1">websocket <a class="header-anchor" href="#websocket" aria-label="Permalink to &quot;websocket&quot;">​</a></h2><ul><li><h4 id="构造函数" tabindex="-1">构造函数 <a class="header-anchor" href="#构造函数" aria-label="Permalink to &quot;构造函数&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">WebSocket</span><span style="color:#E1E4E8;">(url[, protocols])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">WebSocket</span><span style="color:#24292E;">(url[, protocols])</span></span></code></pre></div></li><li><h4 id="常量" tabindex="-1">常量 <a class="header-anchor" href="#常量" aria-label="Permalink to &quot;常量&quot;">​</a></h4></li></ul><table><thead><tr><th style="text-align:center;">常量</th><th style="text-align:center;">值</th></tr></thead><tbody><tr><td style="text-align:center;">WebSocket.CONNECTING</td><td style="text-align:center;">0</td></tr><tr><td style="text-align:center;">WebSocket.OPEN</td><td style="text-align:center;">1</td></tr><tr><td style="text-align:center;">WebSocket.CLOSING</td><td style="text-align:center;">2</td></tr><tr><td style="text-align:center;">WebSocket.CLOSED</td><td style="text-align:center;">3</td></tr></tbody></table><h3 id="websocket-实例上的属性" tabindex="-1">websocket 实例上的属性 <a class="header-anchor" href="#websocket-实例上的属性" aria-label="Permalink to &quot;websocket 实例上的属性&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">WebSocket </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">binaryType, </span><span style="color:#6A737D;">// 使用二进制的数据类型连接。</span></span>
<span class="line"><span style="color:#E1E4E8;">bufferedAmount, </span><span style="color:#6A737D;">//  只读 --- 未发送至服务器的字节数。</span></span>
<span class="line"><span style="color:#E1E4E8;">extensions, </span><span style="color:#6A737D;">//  只读 --- 服务器选择的扩展。</span></span>
<span class="line"><span style="color:#E1E4E8;">onclose, </span><span style="color:#6A737D;">// 用于指定连接关闭后的回调函数。</span></span>
<span class="line"><span style="color:#E1E4E8;">onerror, </span><span style="color:#6A737D;">// 用于指定连接失败后的回调函数。</span></span>
<span class="line"><span style="color:#E1E4E8;">onmessage, </span><span style="color:#6A737D;">// 用于指定当从服务器接受到信息时的回调函数。</span></span>
<span class="line"><span style="color:#E1E4E8;">onopen, </span><span style="color:#6A737D;">// 用于指定连接成功后的回调函数。</span></span>
<span class="line"><span style="color:#E1E4E8;">protocol, </span><span style="color:#6A737D;">//  只读 --- 服务器选择的下属协议。</span></span>
<span class="line"><span style="color:#E1E4E8;">readyState, </span><span style="color:#6A737D;">//  只读 --- 当前的链接状态。 </span></span>
<span class="line"><span style="color:#E1E4E8;">url </span><span style="color:#6A737D;">//  只读 --- WebSocket 的绝对路径。</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">WebSocket </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">binaryType, </span><span style="color:#6A737D;">// 使用二进制的数据类型连接。</span></span>
<span class="line"><span style="color:#24292E;">bufferedAmount, </span><span style="color:#6A737D;">//  只读 --- 未发送至服务器的字节数。</span></span>
<span class="line"><span style="color:#24292E;">extensions, </span><span style="color:#6A737D;">//  只读 --- 服务器选择的扩展。</span></span>
<span class="line"><span style="color:#24292E;">onclose, </span><span style="color:#6A737D;">// 用于指定连接关闭后的回调函数。</span></span>
<span class="line"><span style="color:#24292E;">onerror, </span><span style="color:#6A737D;">// 用于指定连接失败后的回调函数。</span></span>
<span class="line"><span style="color:#24292E;">onmessage, </span><span style="color:#6A737D;">// 用于指定当从服务器接受到信息时的回调函数。</span></span>
<span class="line"><span style="color:#24292E;">onopen, </span><span style="color:#6A737D;">// 用于指定连接成功后的回调函数。</span></span>
<span class="line"><span style="color:#24292E;">protocol, </span><span style="color:#6A737D;">//  只读 --- 服务器选择的下属协议。</span></span>
<span class="line"><span style="color:#24292E;">readyState, </span><span style="color:#6A737D;">//  只读 --- 当前的链接状态。 </span></span>
<span class="line"><span style="color:#24292E;">url </span><span style="color:#6A737D;">//  只读 --- WebSocket 的绝对路径。</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h3><ul><li>WebSocket.close([code[, reason]]) 关闭当前链接。</li><li>*** WebSocket.send(data)<br> 向服务器发送数据。(最好在 onopen 事件里发送数据)</li></ul><h3 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h3><p>使用 <code>addEventListener()</code> 或将一个事件监听器赋值给本接口的 <code>oneventname</code> 属性，来监听下面的事件。</p><ul><li>close 当一个 WebSocket 连接被关闭时触发。 (用来关闭 websocket 连接) 也可以通过 onclose 属性来设置。 (服务端 通过 message 事件接收客户端发送过来的消息)</li><li>error 当一个 WebSocket 连接因错误而关闭时触发，例如无法发送数据时。 也可以通过 onerror 属性来设置。</li><li>*** message 当通过 <code>WebSocket 收到数据时</code>触发。 也可以通过 onmessage 属性来设置。</li><li>*** open 当一个 <code>WebSocket 连接成功时</code>触发。 也可以通过 onopen 属性来设置。</li></ul><p>参看: <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications" target="_blank" rel="noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications</a></p><h2 id="更多细节-mdn-里搜-websocket" tabindex="-1">更多细节: mdn 里搜 websocket <a class="header-anchor" href="#更多细节-mdn-里搜-websocket" aria-label="Permalink to &quot;更多细节: mdn 里搜 websocket&quot;">​</a></h2><h3 id="什么是-websocket" tabindex="-1">什么是 webSocket <a class="header-anchor" href="#什么是-websocket" aria-label="Permalink to &quot;什么是 webSocket&quot;">​</a></h3><p>WebSocket 是一种在单个 TCP 连接上进行全双工通信的协议。使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。</p><p>在 WebSocket API 中，浏览器和服务器只需要完成一次握手，两者之间就直接可以创建持久性的连接，并进行双向数据传输。 WebSocket 具有以下特点：</p><ol><li><strong>全双工通信</strong>：WebSocket 允许客户端和服务器在连接建立后双向传输数据，不像传统的 HTTP 请求-响应模式那样需要等待服务器的响应。</li><li><strong>持久连接</strong>：一旦建立 WebSocket 连接，它将保持打开状态，允许在连接的生命周期内随时传输数据，避免了频繁地建立和关闭连接的开销。</li><li><strong>低延迟</strong>：WebSocket 的连接一旦建立，数据可以实时传输，无需等待额外的握手和请求。</li><li><strong>双方通知</strong>：服务器可以主动向客户端发送数据，而不需要客户端首先请求。这对于实时更新和通知非常有用。</li><li><strong>减少网络流量</strong>：WebSocket 通过在连接保持打开的情况下传输数据，可以减少 HTTP 请求的开销，从而减少网络流量。</li></ol><h3 id="websocket-解决了什么问题" tabindex="-1">WebSocket 解决了什么问题： <a class="header-anchor" href="#websocket-解决了什么问题" aria-label="Permalink to &quot;WebSocket 解决了什么问题：&quot;">​</a></h3><p>在不使用 WebSocket 时，如果我们需要建立一条长连接，有以下几种方法：</p><ul><li>轮询</li><li>长轮询（常用）</li><li>SSE(Server Send Event)</li></ul><p>当出现类似体育赛事、聊天室、实时位置之类的场景时，客户端要获取服务器端的变化，就只能通过轮询(定时请求)来了解服务器端有没有新的信息变化。WebSocket 的出现，让服务器端可以主动向服务器端发送信息，使得浏览器具备了实时双向通信的能力,这就是 WebSocket 解决的问题 WebSocket 适用于需要<strong>实时、高效、双向通信</strong>的场景， 具体场景有以下几种:</p><ol><li><strong>实时聊天应用</strong>：WebSocket 可以使聊天应用实现实时消息传递，从而用户可以即时收到新消息，无需手动刷新页面。</li><li><strong>实时协作工具</strong>：协作工具可以使用 WebSocket 实现多用户同时编辑文档，实时更新内容。</li><li><strong>在线游戏</strong>：多人在线游戏通常需要实时的玩家间通信，WebSocket 可以提供低延迟的双向通信，使游戏状态和动作可以及时传递。</li><li><strong>实时更新</strong>：当应用需要实时更新数据，如股票市场价格、新闻、天气等，WebSocket 可以将更新直接推送给客户端，而不需要客户端不断地轮询服务器。</li><li><strong>通知和提醒</strong>：应用可以使用 WebSocket 发送实时通知和提醒，如社交媒体的新消息提醒。</li><li><strong>在线交互式应用</strong>：需要实时反馈和即时用户输入响应的应用，如实时投票应用、即时问答平台等。</li><li><strong>数据监控和控制</strong>：监控系统和远程控制系统需要实时更新数据和状态，WebSocket 可以满足这些需求。</li></ol><ul><li>带宽问题：WebSocket 相对于 HTTP 来说协议头更加小，同时按需传递。</li><li>数据实时性问题：WebSocket 相对于轮询和长轮询来说，能够实时传递数据，延迟更小。</li><li>状态问题：相较于 HTTP 的无状态请求，WebSocket 在建立连接后能够维持特定的状态。</li></ul><h3 id="websocket-与-http-对比" tabindex="-1">WebSocket 与 HTTP 对比 <a class="header-anchor" href="#websocket-与-http-对比" aria-label="Permalink to &quot;WebSocket 与 HTTP 对比&quot;">​</a></h3><p><img src="https://user-gold-cdn.xitu.io/2019/12/3/16ec9bc6c28a9a19?w=1014&amp;h=442&amp;f=png&amp;s=225703" alt="111"></p><h3 id="基本使用-一个协议-四个事件-open-close-message-error-两个方法-send-close-open的时候-send-数据" tabindex="-1">基本使用(一个协议,四个事件(open,close,message,error),两个方法(send,close),open的时候 send 数据) <a class="header-anchor" href="#基本使用-一个协议-四个事件-open-close-message-error-两个方法-send-close-open的时候-send-数据" aria-label="Permalink to &quot;基本使用(一个协议,四个事件(open,close,message,error),两个方法(send,close),open的时候 send 数据)&quot;">​</a></h3><p><strong>客户端</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ws</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WebSocket</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;ws://localhost:8888&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">ws.</span><span style="color:#B392F0;">onopen</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;WebSocket onopen&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  ws.</span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">()</span><span style="color:#6A737D;">// open 的时候才能send 数据</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">ws.</span><span style="color:#B392F0;">onmessage</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(e)</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(e.data)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">ws.</span><span style="color:#B392F0;">onclose</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;WebSocket onclose&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">ws.</span><span style="color:#B392F0;">onerror</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;WebSocket onerror&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ws</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WebSocket</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;ws://localhost:8888&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">ws.</span><span style="color:#6F42C1;">onopen</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;WebSocket onopen&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  ws.</span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">()</span><span style="color:#6A737D;">// open 的时候才能send 数据</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">ws.</span><span style="color:#6F42C1;">onmessage</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#E36209;">e</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(e)</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(e.data)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">ws.</span><span style="color:#6F42C1;">onclose</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#E36209;">e</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;WebSocket onclose&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">ws.</span><span style="color:#6F42C1;">onerror</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#E36209;">e</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;WebSocket onerror&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ul><li>WebSocket.onopen： 连接成功后调用</li><li>WebSocket.onmessage： 当接收到服务器消息时调用</li><li>WebSocket.onclose： 连接关闭后调用</li><li>WebSocket.onerror： 发生错误后调用</li></ul><h3 id="new-websocket-url-readystate" tabindex="-1">new Websocket(url).readyState <a class="header-anchor" href="#new-websocket-url-readystate" aria-label="Permalink to &quot;new Websocket(url).readyState&quot;">​</a></h3><ul><li>CONNECTING：值为0，表示正在连接。</li><li>OPEN：值为1，表示连接成功，可以通信了。</li><li>CLOSING：值为2，表示连接正在关闭。</li><li>CLOSED：值为3，表示连接已经关闭，或者打开连接失败。 <strong>服务端例子(koa)</strong></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Koa</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;koa&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">WebSocket</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;ws&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">app</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Koa</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ws</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> WebSocket.</span><span style="color:#B392F0;">Server</span><span style="color:#E1E4E8;">({ port: </span><span style="color:#79B8FF;">8888</span><span style="color:#E1E4E8;"> })</span></span>
<span class="line"><span style="color:#E1E4E8;">ws.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;connection&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">ws</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;server connection&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  ws.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;message&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">msg</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;server receive msg：&#39;</span><span style="color:#E1E4E8;">, msg)</span></span>
<span class="line"><span style="color:#E1E4E8;">  })</span></span>
<span class="line"><span style="color:#E1E4E8;">  ws.</span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Information from the server&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"><span style="color:#E1E4E8;">app.</span><span style="color:#B392F0;">listen</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3000</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Koa</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;koa&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">WebSocket</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;ws&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">app</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Koa</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ws</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> WebSocket.</span><span style="color:#6F42C1;">Server</span><span style="color:#24292E;">({ port: </span><span style="color:#005CC5;">8888</span><span style="color:#24292E;"> })</span></span>
<span class="line"><span style="color:#24292E;">ws.</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;connection&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">ws</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;server connection&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  ws.</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;message&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">msg</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;server receive msg：&#39;</span><span style="color:#24292E;">, msg)</span></span>
<span class="line"><span style="color:#24292E;">  })</span></span>
<span class="line"><span style="color:#24292E;">  ws.</span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Information from the server&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#24292E;">app.</span><span style="color:#6F42C1;">listen</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3000</span><span style="color:#24292E;">)</span></span></code></pre></div><p>WebSocket 可以传递 String、ArrayBuffer 和 Blob 三种数据类型，因此在收到消息时可能是其中的任意一种。其中，String 和 ArrayBuffer 使用的最多。</p><ul><li>如果是 String 类型，直接通过字符串处理函数即可进行相关转换，如 JSON 等格式。</li><li>如果是二进制 blob 类型，则需要使用 ArrayBuffer 和 DataView 来进行处理，下面简单介绍。</li></ul><p>二进制数据包括：blob 对象和 Arraybuffer 对象，所以我们需要分开来处理。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 接收数据</span></span>
<span class="line"><span style="color:#E1E4E8;">ws.</span><span style="color:#B392F0;">onmessage</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (event.data </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ArrayBuffer</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 判断 ArrayBuffer 对象</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (event.data </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Blob</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 判断 Blob 对象</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">// 发送 Blob 对象的例子</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> file </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">querySelector</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;input[type=&quot;file&quot;]&#39;</span><span style="color:#E1E4E8;">).files[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">ws.</span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">(file)</span></span>
<span class="line"><span style="color:#6A737D;">// 发送 ArrayBuffer 对象的例子</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> img </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> canvas_context.</span><span style="color:#B392F0;">getImageData</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">400</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">320</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> binary </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Uint8Array</span><span style="color:#E1E4E8;">(img.data.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> img.data.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  binary[i] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> img.data[i]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">ws.</span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">(binary.buffer)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 接收数据</span></span>
<span class="line"><span style="color:#24292E;">ws.</span><span style="color:#6F42C1;">onmessage</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">event</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (event.data </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ArrayBuffer</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 判断 ArrayBuffer 对象</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (event.data </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Blob</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 判断 Blob 对象</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">// 发送 Blob 对象的例子</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> file </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">querySelector</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;input[type=&quot;file&quot;]&#39;</span><span style="color:#24292E;">).files[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">ws.</span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(file)</span></span>
<span class="line"><span style="color:#6A737D;">// 发送 ArrayBuffer 对象的例子</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> img </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> canvas_context.</span><span style="color:#6F42C1;">getImageData</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">400</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">320</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> binary </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Uint8Array</span><span style="color:#24292E;">(img.data.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> img.data.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  binary[i] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> img.data[i]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">ws.</span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(binary.buffer)</span></span></code></pre></div><p>webSocket.bufferedAmount 属性，表示还有多少字节的二进制数据没有发送出去 如果发送的二进制数据很大的话，可以这样判断</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> data </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ArrayBuffer</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10000000</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">socket.</span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">(data)</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (socket.bufferedAmount </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 发送完毕</span></span>
<span class="line"><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 发送还没结束</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ArrayBuffer</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">10000000</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">socket.</span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(data)</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (socket.bufferedAmount </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 发送完毕</span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 发送还没结束</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="总结-websocket-的优点" tabindex="-1">总结 WebSocket 的优点 <a class="header-anchor" href="#总结-websocket-的优点" aria-label="Permalink to &quot;总结 WebSocket 的优点&quot;">​</a></h3><ul><li>双向通信(一开始说的，也是最重要的一点)。</li><li>数据格式比较轻量，性能开销小，通信高效</li><li>协议控制的数据包头部较小，而 HTTP 协议每次通信都需要携带完整的头部</li><li>更好的二进制支持</li><li>没有同源限制，客户端可以与任意服务器通信</li><li>与 HTTP 协议有着良好的兼容性。默认端口也是 80 和 443，并且握手阶段采用 HTTP 协议，因此握手时不容易屏蔽，能通过各种 HTTP 代理服务器</li></ul><h3 id="使用-weboscket-如何使用" tabindex="-1">使用 (weboscket 如何使用) <a class="header-anchor" href="#使用-weboscket-如何使用" aria-label="Permalink to &quot;使用  (weboscket 如何使用)&quot;">​</a></h3><p>主要就一个协议,4个事件,两个方法</p><ul><li>一个协议, <ul><li>wss://</li></ul></li><li>四个事件, <ul><li>onopen</li><li>onclose</li><li>onerror</li><li>onmessage</li></ul></li><li>两个方法 <ul><li>send</li><li>close</li></ul></li><li>注意 : <ul><li>* onopen 的时候才能 send</li></ul></li></ul><h3 id="websocket-握手请求头字段" tabindex="-1">WebSocket 握手请求头字段： <a class="header-anchor" href="#websocket-握手请求头字段" aria-label="Permalink to &quot;WebSocket 握手请求头字段：&quot;">​</a></h3><ol><li>Upgrade：标识请求将升级为 WebSocket 连接。</li><li>Connection：标识请求将保持连接，值为 Upgrade。</li><li>Sec-WebSocket-Key：包含一个基于随机数的密钥，用于计算握手响应的 Sec-WebSocket-Accept 值。</li><li>Sec-WebSocket-Version：指定支持的 WebSocket 协议版本，如 13。</li><li>Sec-WebSocket-Extensions：指定支持的扩展，如压缩等。</li><li>Sec-WebSocket-Protocol：指定客户端请求的子协议，用于多个子协议的支持。</li></ol><h3 id="websocket-握手响应头字段" tabindex="-1">WebSocket 握手响应头字段： <a class="header-anchor" href="#websocket-握手响应头字段" aria-label="Permalink to &quot;WebSocket 握手响应头字段：&quot;">​</a></h3><ol><li>Upgrade：标识响应将升级为 WebSocket 连接。</li><li>Connection：标识响应将保持连接，值为 Upgrade。</li><li>Sec-WebSocket-Accept：包含基于客户端的 Sec-WebSocket-Key 计算的响应密钥。</li><li>Sec-WebSocket-Extensions：指定服务器支持的扩展。</li><li>Sec-WebSocket-Protocol：指定实际使用的子协议。</li></ol><h3 id="一些常见的-websocket-状态码-stateclode" tabindex="-1">一些常见的 WebSocket 状态码 (stateClode)： <a class="header-anchor" href="#一些常见的-websocket-状态码-stateclode" aria-label="Permalink to &quot;一些常见的 WebSocket 状态码 (stateClode)：&quot;">​</a></h3><ol><li>连接状态码：</li></ol><ul><li>1000：正常关闭。表示连接已经完成关闭。</li><li>1001：终端关闭。表示终端或用户主动关闭连接。</li><li>1006：无法连接。表示连接由于某种原因无法建立。</li></ul><ol start="2"><li>保留状态码：</li></ol><ul><li>1002：协议错误。表示服务器收到了一个无效的帧或违反了协议规定。</li><li>1003：数据类型错误。表示服务器无法接受客户端发送的数据类型。</li><li>1004：保留。此状态码当前未使用。</li><li>1005：保留。此状态码当前未使用。</li></ul><ol start="3"><li>错误状态码：</li></ol><ul><li>1007：数据错误。表示服务器在接收到数据时遇到数据格式错误或不一致。</li><li>1008：消息过大。表示接收到的消息太大，服务器无法处理。</li><li>1009：数据过大。表示服务器在处理消息时接收到过大的数据。</li><li>1010：扩展错误。表示客户端在扩展握手中出现错误。</li><li>1011：服务错误。表示服务器由于遇到不可恢复的错误而关闭连接。</li></ul><ol start="4"><li>保留状态码：</li></ol><ul><li>1012：保留。此状态码当前未使用。</li><li>1013：保留。此状态码当前未使用。</li></ul><ol start="5"><li>应用程序状态码：</li></ol><ul><li>3000-3999：这个范围的状态码是供应用程序自定义使用的，用于特定的应用需求。 一个协议,四个事件(open,close,message,error),两个方法(send,close)</li></ul><p>请求地址分析: | proxy替换 | http://localhost:8000/sacp/api/v1/sacp/api/get_xml |- 拦截器 -| |- zujianli -| 提供数据的接口地址(proxy): https://www.fastmock.site/sacp/api/v1/sacp/api/get_xml</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// proxy</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;/sacp/api&#39;</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      target: </span><span style="color:#9ECBFF;">&#39;https://www.fastmock.site/mock/1f27181715381fce6ad7c986aadff494/sacp&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      secure: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// 依赖 origin 的功能可能需要这个，比如 cookie</span></span>
<span class="line"><span style="color:#E1E4E8;">      changeOrigin: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// pathRewrite: {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">//   &#39;^/sacp/api&#39;: &#39;/api&#39;,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// },</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// app.tsx</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">authHeaderInterceptor</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">url</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">options</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">any</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    url: baseUrl </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;/sacp/api/v1&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> url,</span></span>
<span class="line"><span style="color:#E1E4E8;">    options: o,</span></span>
<span class="line"><span style="color:#E1E4E8;">  };</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">request</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 新增自动添加AccessToken的请求前拦截器</span></span>
<span class="line"><span style="color:#E1E4E8;">  requestInterceptors: [authHeaderInterceptor],</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 组件里</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">request1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">request</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/sacp/api/get_xml&#39;</span><span style="color:#E1E4E8;">, {</span></span>
<span class="line"><span style="color:#E1E4E8;">        method: </span><span style="color:#9ECBFF;">&#39;GET&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    })</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// proxy</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;/sacp/api&#39;</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">      target: </span><span style="color:#032F62;">&#39;https://www.fastmock.site/mock/1f27181715381fce6ad7c986aadff494/sacp&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      secure: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// 依赖 origin 的功能可能需要这个，比如 cookie</span></span>
<span class="line"><span style="color:#24292E;">      changeOrigin: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// pathRewrite: {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">//   &#39;^/sacp/api&#39;: &#39;/api&#39;,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// },</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// app.tsx</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">authHeaderInterceptor</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">url</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">, </span><span style="color:#E36209;">options</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">any</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    url: baseUrl </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;/sacp/api/v1&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> url,</span></span>
<span class="line"><span style="color:#24292E;">    options: o,</span></span>
<span class="line"><span style="color:#24292E;">  };</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">request</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 新增自动添加AccessToken的请求前拦截器</span></span>
<span class="line"><span style="color:#24292E;">  requestInterceptors: [authHeaderInterceptor],</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 组件里</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">request1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">request</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/sacp/api/get_xml&#39;</span><span style="color:#24292E;">, {</span></span>
<span class="line"><span style="color:#24292E;">        method: </span><span style="color:#032F62;">&#39;GET&#39;</span></span>
<span class="line"><span style="color:#24292E;">    })</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><hr><p>WebSockets API 的使用相对简单，只需要几个基本步骤：</p><p>「建立 WebSocket 连接」 在客户端代码中，使用 JavaScript 创建一个 WebSocket 对象，并通过 WebSocket URL 建立与服务器的连接。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">socket</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WebSocket</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;ws://example.com/socket&quot;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">socket</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WebSocket</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;ws://example.com/socket&quot;</span><span style="color:#24292E;">);</span></span></code></pre></div><p>「处理连接事件」 在连接建立后，WebSocket 对象会触发不同的事件，我们可以监听这些事件来处理连接状态和接收数据。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">socket.</span><span style="color:#B392F0;">onopen</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;WebSocket 连接已建立&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">socket.</span><span style="color:#B392F0;">onmessage</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;收到消息:&quot;</span><span style="color:#E1E4E8;">, event.data);</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">socket.</span><span style="color:#B392F0;">onclose</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;WebSocket 连接已关闭&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">socket.</span><span style="color:#6F42C1;">onopen</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;WebSocket 连接已建立&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">socket.</span><span style="color:#6F42C1;">onmessage</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">event</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;收到消息:&quot;</span><span style="color:#24292E;">, event.data);</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">socket.</span><span style="color:#6F42C1;">onclose</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;WebSocket 连接已关闭&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>「发送和接收数据」 通过 WebSocket 对象的 send() 方法发送数据到服务器，服务器可以使用 send() 方法将数据发送给客户端。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 发送数据</span></span>
<span class="line"><span style="color:#E1E4E8;">socket.</span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Hello, Server!&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 接收数据</span></span>
<span class="line"><span style="color:#E1E4E8;">socket.</span><span style="color:#B392F0;">onmessage</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;收到消息:&quot;</span><span style="color:#E1E4E8;">, event.data);</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 发送数据</span></span>
<span class="line"><span style="color:#24292E;">socket.</span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hello, Server!&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 接收数据</span></span>
<span class="line"><span style="color:#24292E;">socket.</span><span style="color:#6F42C1;">onmessage</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">event</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;收到消息:&quot;</span><span style="color:#24292E;">, event.data);</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>「关闭连接」 当不再需要使用 WebSocket 连接时，可以通过调用 WebSocket 对象的 close() 方法来关闭连接。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">socket.</span><span style="color:#B392F0;">close</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">socket.</span><span style="color:#6F42C1;">close</span><span style="color:#24292E;">();</span></span></code></pre></div><h3 id="心跳机制" tabindex="-1">心跳机制 <a class="header-anchor" href="#心跳机制" aria-label="Permalink to &quot;心跳机制&quot;">​</a></h3><p>问题：</p><p>（1）websocket在连接后，如果长时间服务端和客户端不发消息，服务端会把websocket给断开。</p><p>（2）存在网络忽然断开的情况，这时服务器端并没有触发onclose的事件。服务器会继续向客户端发送多余的信息，这些数据会丢失。</p><p>心跳重连机制</p><p>为了解决上面的问题，就需要⼀种机制来检测客户端和服务端是否处于正常的连接状态。因此就有了websocket的心跳机制。</p><p>⼼跳机制是客户端每隔⼀段时间会向服务端发送⼀个数据包，告诉服务端自己还活着，同时客户端会根据服务端是否会回传⼀个数据包来确定服务端是否还活着。 如果客户端没有收到回复，表示websocket断开连接或者网络出现问题，就需要重连。</p><p>websocket心跳机制：顾名思义，就是客户端每隔一段时间向服务端发送一个特有的心跳消息，每次服务端收到消息后只需将消息返回，此时，若二者还保持连接，则客户端就会收到消息，若没收到，则说明连接断开，此时，客户端就要主动重连，完成一个周期 心跳的实现也很简单，只需在第一次连接时用回调函数做延时处理，此时还需要设置一个心跳超时时间，若某时间段内客户端发送了消息，而服务端未返回，则认定为断线。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">initHeartCheck</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">            timeout: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 每2s向服务端发送一次消息</span></span>
<span class="line"><span style="color:#E1E4E8;">            serverTimeout: </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// 10s收不到服务端消息算超时</span></span>
<span class="line"><span style="color:#E1E4E8;">            timer: </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            serverTimer: </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">reset</span><span style="color:#E1E4E8;">() { </span><span style="color:#6A737D;">// 心跳检测重置</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">clearTimeout</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.timer);</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">clearTimeout</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.serverTimer);</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.timer </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.serverTimer </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            },</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">start</span><span style="color:#E1E4E8;">() { </span><span style="color:#6A737D;">// 心跳检测启动</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">reset</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.timer </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setTimeout</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> { </span></span>
<span class="line"><span style="color:#E1E4E8;">                    socket.</span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;ping&#39;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 定时向服务端发送消息</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.serverTimer) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.serverTimer </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">setTimeout</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#6A737D;">// 关闭连接触发重连</span></span>
<span class="line"><span style="color:#E1E4E8;">                           console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">toLocaleString</span><span style="color:#E1E4E8;">(), </span><span style="color:#9ECBFF;">&quot;not received pong, close the websocket&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                          socket.</span><span style="color:#B392F0;">close</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">//关闭websocket或根据业务需求去重连 </span></span>
<span class="line"><span style="color:#E1E4E8;">                        }, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.serverTimeout);</span></span>
<span class="line"><span style="color:#E1E4E8;">                    }</span></span>
<span class="line"><span style="color:#E1E4E8;">                }, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.timeout);</span></span>
<span class="line"><span style="color:#E1E4E8;">            },</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }   </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">socket</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WebSocket</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;ws://localhost:8080&#39;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// WebSocket 建立连接</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">heartCheck</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">initHeartCheck</span><span style="color:#E1E4E8;">()；</span><span style="color:#6A737D;">// 初始化心跳检测对象</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// WebSocket建立连接成功</span></span>
<span class="line"><span style="color:#E1E4E8;">socket.</span><span style="color:#B392F0;">addEventListener</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;open&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">　　heartCheck.</span><span style="color:#B392F0;">start</span><span style="color:#E1E4E8;">();</span><span style="color:#6A737D;">// 启动心跳检测</span></span>
<span class="line"><span style="color:#E1E4E8;">　　socket.</span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Hello Server!&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#6A737D;">// WebSocket接受到服务端消息</span></span>
<span class="line"><span style="color:#E1E4E8;">socket.</span><span style="color:#B392F0;">addEventListener</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;message&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">  heartCheck.</span><span style="color:#B392F0;">start</span><span style="color:#E1E4E8;">();</span><span style="color:#6A737D;">// 启动心跳检测</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"><span style="color:#6A737D;">// WebSocket 连接被关闭</span></span>
<span class="line"><span style="color:#E1E4E8;">socket.</span><span style="color:#B392F0;">addEventListener</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;close&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">  heartCheck.</span><span style="color:#B392F0;">reset</span><span style="color:#E1E4E8;">();</span><span style="color:#6A737D;">// 启动心跳检测</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"><span style="color:#6A737D;">// WebSocket 连接因错误而关闭</span></span>
<span class="line"><span style="color:#E1E4E8;">socket.</span><span style="color:#B392F0;">addEventListener</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;error&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">  heartCheck.</span><span style="color:#B392F0;">reset</span><span style="color:#E1E4E8;">();</span><span style="color:#6A737D;">// 启动心跳检测</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">initHeartCheck</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">            timeout: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 每2s向服务端发送一次消息</span></span>
<span class="line"><span style="color:#24292E;">            serverTimeout: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// 10s收不到服务端消息算超时</span></span>
<span class="line"><span style="color:#24292E;">            timer: </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            serverTimer: </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">reset</span><span style="color:#24292E;">() { </span><span style="color:#6A737D;">// 心跳检测重置</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">clearTimeout</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.timer);</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">clearTimeout</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.serverTimer);</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.timer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.serverTimer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            },</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">start</span><span style="color:#24292E;">() { </span><span style="color:#6A737D;">// 心跳检测启动</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">reset</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.timer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setTimeout</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> { </span></span>
<span class="line"><span style="color:#24292E;">                    socket.</span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;ping&#39;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 定时向服务端发送消息</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.serverTimer) {</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.serverTimer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">setTimeout</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#6A737D;">// 关闭连接触发重连</span></span>
<span class="line"><span style="color:#24292E;">                           console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">toLocaleString</span><span style="color:#24292E;">(), </span><span style="color:#032F62;">&quot;not received pong, close the websocket&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                          socket.</span><span style="color:#6F42C1;">close</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">//关闭websocket或根据业务需求去重连 </span></span>
<span class="line"><span style="color:#24292E;">                        }, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.serverTimeout);</span></span>
<span class="line"><span style="color:#24292E;">                    }</span></span>
<span class="line"><span style="color:#24292E;">                }, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.timeout);</span></span>
<span class="line"><span style="color:#24292E;">            },</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }   </span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">socket</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WebSocket</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;ws://localhost:8080&#39;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// WebSocket 建立连接</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">heartCheck</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">initHeartCheck</span><span style="color:#24292E;">()；</span><span style="color:#6A737D;">// 初始化心跳检测对象</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// WebSocket建立连接成功</span></span>
<span class="line"><span style="color:#24292E;">socket.</span><span style="color:#6F42C1;">addEventListener</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;open&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">event</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">　　heartCheck.</span><span style="color:#6F42C1;">start</span><span style="color:#24292E;">();</span><span style="color:#6A737D;">// 启动心跳检测</span></span>
<span class="line"><span style="color:#24292E;">　　socket.</span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Hello Server!&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#6A737D;">// WebSocket接受到服务端消息</span></span>
<span class="line"><span style="color:#24292E;">socket.</span><span style="color:#6F42C1;">addEventListener</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;message&#39;</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">event</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">  heartCheck.</span><span style="color:#6F42C1;">start</span><span style="color:#24292E;">();</span><span style="color:#6A737D;">// 启动心跳检测</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#6A737D;">// WebSocket 连接被关闭</span></span>
<span class="line"><span style="color:#24292E;">socket.</span><span style="color:#6F42C1;">addEventListener</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;close&#39;</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">event</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">  heartCheck.</span><span style="color:#6F42C1;">reset</span><span style="color:#24292E;">();</span><span style="color:#6A737D;">// 启动心跳检测</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#6A737D;">// WebSocket 连接因错误而关闭</span></span>
<span class="line"><span style="color:#24292E;">socket.</span><span style="color:#6F42C1;">addEventListener</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;error&#39;</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">event</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">  heartCheck.</span><span style="color:#6F42C1;">reset</span><span style="color:#24292E;">();</span><span style="color:#6A737D;">// 启动心跳检测</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h2 id="nginx-常用的基础配置-前端相关方面" tabindex="-1">Nginx 常用的基础配置（前端相关方面） <a class="header-anchor" href="#nginx-常用的基础配置-前端相关方面" aria-label="Permalink to &quot;Nginx 常用的基础配置（前端相关方面）&quot;">​</a></h2><p>正向代理 <strong>客户端通过代理服务器发送请求到目标服务器。客户端向代理服务器发送请求，代理服务器再将请求转发给目标服务器，并将服务器的响应返回给客户端</strong>。 可以隐藏客户端的真实IP地址，提供匿名访问和访问控制等功能。 常用于跨越防火墙访问互联网、访问被封禁的网站等情况。</p><p>反向代理 <strong>客户端发送请求到代理服务器，代理服务器再将请求转发给后端的多个服务器中的一个或多个，并将后端服务器的响应返回给客户端。客户端并不直接访问后端服务器，而是通过反向代理服务器来获取服务。</strong> 反向代理可以实现负载均衡、高可用性和安全性等功能。 它常用于网站的高并发访问、保护后端服务器、提供缓存和SSL终止等功能。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 进入目录：/usr/local/nginx/sbin</span></span>
<span class="line"><span style="color:#6A737D;">#启动命令：./nginx</span></span>
<span class="line"><span style="color:#B392F0;">nginx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-s</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">reload</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 重启命令：</span></span>
<span class="line"><span style="color:#B392F0;">./nginx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-s</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stop</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 快速关闭命令：</span></span>
<span class="line"><span style="color:#B392F0;">./nginx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-s</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">quit</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 有序地停止，需要进程完成当前工作后再停止：</span></span>
<span class="line"><span style="color:#B392F0;">killall</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nginx</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 直接杀死nginx进程：</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 进入目录：/usr/local/nginx/sbin</span></span>
<span class="line"><span style="color:#6A737D;">#启动命令：./nginx</span></span>
<span class="line"><span style="color:#6F42C1;">nginx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-s</span><span style="color:#24292E;"> </span><span style="color:#032F62;">reload</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 重启命令：</span></span>
<span class="line"><span style="color:#6F42C1;">./nginx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-s</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stop</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 快速关闭命令：</span></span>
<span class="line"><span style="color:#6F42C1;">./nginx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-s</span><span style="color:#24292E;"> </span><span style="color:#032F62;">quit</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 有序地停止，需要进程完成当前工作后再停止：</span></span>
<span class="line"><span style="color:#6F42C1;">killall</span><span style="color:#24292E;"> </span><span style="color:#032F62;">nginx</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 直接杀死nginx进程：</span></span></code></pre></div><h3 id="基础配置" tabindex="-1">基础配置 <a class="header-anchor" href="#基础配置" aria-label="Permalink to &quot;基础配置&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">user</span><span style="color:#E1E4E8;">                            </span><span style="color:#9ECBFF;">root</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#B392F0;">worker_processes</span><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">events</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">worker_connections</span><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">10240</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">http</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">log_format</span><span style="color:#E1E4E8;">                    </span><span style="color:#9ECBFF;">&#39;$remote_addr - $remote_user [$time_local] &#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;&quot;$request&quot; $status $body_bytes_sent &#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;&quot;$http_referer&quot; &quot;$http_user_agent&quot;&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">include</span><span style="color:#E1E4E8;">                       </span><span style="color:#9ECBFF;">mime.types</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">default_type</span><span style="color:#E1E4E8;">                  </span><span style="color:#9ECBFF;">application/octet-stream</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">sendfile</span><span style="color:#E1E4E8;">                      </span><span style="color:#9ECBFF;">on</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">#autoindex                    on;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">#autoindex_exact_size         off;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">autoindex_localtime</span><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">on</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">keepalive_timeout</span><span style="color:#E1E4E8;">             </span><span style="color:#79B8FF;">65</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">gzip</span><span style="color:#E1E4E8;">                          </span><span style="color:#9ECBFF;">on</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">gzip_disable</span><span style="color:#E1E4E8;">                  </span><span style="color:#9ECBFF;">&quot;msie6&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">gzip_min_length</span><span style="color:#E1E4E8;">               </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">gzip_buffers</span><span style="color:#E1E4E8;">                  </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">16</span><span style="color:#9ECBFF;">k</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">gzip_comp_level</span><span style="color:#E1E4E8;">               </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">gzip_types</span><span style="color:#E1E4E8;">                  </span><span style="color:#9ECBFF;">text/plain</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">application/x-javascript</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">text/css</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">application/xml</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">text/javascript</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">application/x-httpd-php</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">image/jpeg</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">image/gif</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">image/png</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">gzip_types</span><span style="color:#E1E4E8;">                    </span><span style="color:#9ECBFF;">&quot;*&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">gzip_vary</span><span style="color:#E1E4E8;">                     </span><span style="color:#9ECBFF;">off</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">server_tokens</span><span style="color:#E1E4E8;">                 </span><span style="color:#9ECBFF;">off</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">client_max_body_size</span><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">200</span><span style="color:#9ECBFF;">m</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">listen</span><span style="color:#E1E4E8;">                      </span><span style="color:#79B8FF;">80</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">default_server</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">server_name</span><span style="color:#E1E4E8;">                 </span><span style="color:#9ECBFF;">_</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">                      </span><span style="color:#79B8FF;">403</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/www/403/index.html</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">include</span><span style="color:#E1E4E8;">                       </span><span style="color:#9ECBFF;">../serve/</span><span style="color:#79B8FF;">*</span><span style="color:#9ECBFF;">.conf</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">user</span><span style="color:#24292E;">                            </span><span style="color:#032F62;">root</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">worker_processes</span><span style="color:#24292E;">                </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">events</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">worker_connections</span><span style="color:#24292E;">            </span><span style="color:#005CC5;">10240</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">http</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">log_format</span><span style="color:#24292E;">                    </span><span style="color:#032F62;">&#39;$remote_addr - $remote_user [$time_local] &#39;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&quot;$request&quot; $status $body_bytes_sent &#39;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&quot;$http_referer&quot; &quot;$http_user_agent&quot;&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">include</span><span style="color:#24292E;">                       </span><span style="color:#032F62;">mime.types</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">default_type</span><span style="color:#24292E;">                  </span><span style="color:#032F62;">application/octet-stream</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">sendfile</span><span style="color:#24292E;">                      </span><span style="color:#032F62;">on</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">#autoindex                    on;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">#autoindex_exact_size         off;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">autoindex_localtime</span><span style="color:#24292E;">           </span><span style="color:#032F62;">on</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">keepalive_timeout</span><span style="color:#24292E;">             </span><span style="color:#005CC5;">65</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">gzip</span><span style="color:#24292E;">                          </span><span style="color:#032F62;">on</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">gzip_disable</span><span style="color:#24292E;">                  </span><span style="color:#032F62;">&quot;msie6&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">gzip_min_length</span><span style="color:#24292E;">               </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">gzip_buffers</span><span style="color:#24292E;">                  </span><span style="color:#005CC5;">4</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">16</span><span style="color:#032F62;">k</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">gzip_comp_level</span><span style="color:#24292E;">               </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">gzip_types</span><span style="color:#24292E;">                  </span><span style="color:#032F62;">text/plain</span><span style="color:#24292E;"> </span><span style="color:#032F62;">application/x-javascript</span><span style="color:#24292E;"> </span><span style="color:#032F62;">text/css</span><span style="color:#24292E;"> </span><span style="color:#032F62;">application/xml</span><span style="color:#24292E;"> </span><span style="color:#032F62;">text/javascript</span><span style="color:#24292E;"> </span><span style="color:#032F62;">application/x-httpd-php</span><span style="color:#24292E;"> </span><span style="color:#032F62;">image/jpeg</span><span style="color:#24292E;"> </span><span style="color:#032F62;">image/gif</span><span style="color:#24292E;"> </span><span style="color:#032F62;">image/png</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">gzip_types</span><span style="color:#24292E;">                    </span><span style="color:#032F62;">&quot;*&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">gzip_vary</span><span style="color:#24292E;">                     </span><span style="color:#032F62;">off</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">server_tokens</span><span style="color:#24292E;">                 </span><span style="color:#032F62;">off</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">client_max_body_size</span><span style="color:#24292E;">          </span><span style="color:#005CC5;">200</span><span style="color:#032F62;">m</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">server</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">listen</span><span style="color:#24292E;">                      </span><span style="color:#005CC5;">80</span><span style="color:#24292E;"> </span><span style="color:#032F62;">default_server</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">server_name</span><span style="color:#24292E;">                 </span><span style="color:#032F62;">_</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">                      </span><span style="color:#005CC5;">403</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/www/403/index.html</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">include</span><span style="color:#24292E;">                       </span><span style="color:#032F62;">../serve/</span><span style="color:#005CC5;">*</span><span style="color:#032F62;">.conf</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>隐藏 Nginx 版本信息</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">http</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">server_tokens</span><span style="color:#E1E4E8;">         </span><span style="color:#9ECBFF;">off</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">http</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">server_tokens</span><span style="color:#24292E;">         </span><span style="color:#032F62;">off</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="禁止ip直接访问80端口" tabindex="-1">禁止ip直接访问80端口 <a class="header-anchor" href="#禁止ip直接访问80端口" aria-label="Permalink to &quot;禁止ip直接访问80端口&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">listen</span><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">80</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">default</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">server_name</span><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">_</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">server</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">listen</span><span style="color:#24292E;">                </span><span style="color:#005CC5;">80</span><span style="color:#24292E;"> </span><span style="color:#032F62;">default</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">server_name</span><span style="color:#24292E;">           </span><span style="color:#032F62;">_</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">                </span><span style="color:#005CC5;">500</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>启动 web 服务 (vue 项目为例)</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 项目启动端口</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">listen</span><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">80</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 域名（localhost）</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">server_name</span><span style="color:#E1E4E8;">       </span><span style="color:#9ECBFF;">_</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 禁止 iframe 嵌套</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">add_header</span><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">X-Frame-Options</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">SAMEORIGIN</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 访问地址 根路径配置</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 项目目录</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">root</span><span style="color:#E1E4E8;"> 	    </span><span style="color:#9ECBFF;">html</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 默认读取文件</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">index</span><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">index.html</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 配置 history 模式的刷新空白</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">try_files</span><span style="color:#E1E4E8;">       $uri $uri</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/index.html</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 后缀匹配，解决静态资源找不到问题</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\.</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">gif</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">jpg</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">jpeg</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">png</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">css</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">shell</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">ico</span><span style="color:#E1E4E8;">)$ </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">root</span><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">html/static/</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 图片防盗链</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/static/.</span><span style="color:#79B8FF;">*</span><span style="color:#79B8FF;">\\.</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">jpg</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">jpeg</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">png</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">gif</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">webp</span><span style="color:#E1E4E8;">)$ </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">root</span><span style="color:#E1E4E8;">              </span><span style="color:#9ECBFF;">html</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">valid_referers</span><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">*</span><span style="color:#9ECBFF;">.deeruby.com</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> ($invalid_referer) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">403</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 访问限制</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/static</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">root</span><span style="color:#E1E4E8;">               </span><span style="color:#9ECBFF;">html</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># allow 允许</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">allow</span><span style="color:#E1E4E8;">              </span><span style="color:#79B8FF;">39</span><span style="color:#9ECBFF;">.xxx.xxx.xxx</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># deny  拒绝</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">deny</span><span style="color:#E1E4E8;">               </span><span style="color:#9ECBFF;">all</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">server</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 项目启动端口</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">listen</span><span style="color:#24292E;">            </span><span style="color:#005CC5;">80</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 域名（localhost）</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">server_name</span><span style="color:#24292E;">       </span><span style="color:#032F62;">_</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 禁止 iframe 嵌套</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">add_header</span><span style="color:#24292E;">        </span><span style="color:#032F62;">X-Frame-Options</span><span style="color:#24292E;"> </span><span style="color:#032F62;">SAMEORIGIN</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 访问地址 根路径配置</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">location</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 项目目录</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">root</span><span style="color:#24292E;"> 	    </span><span style="color:#032F62;">html</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 默认读取文件</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">index</span><span style="color:#24292E;">           </span><span style="color:#032F62;">index.html</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 配置 history 模式的刷新空白</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">try_files</span><span style="color:#24292E;">       $uri $uri</span><span style="color:#032F62;">/</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/index.html</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 后缀匹配，解决静态资源找不到问题</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">location</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~</span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\.</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">gif</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">jpg</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">jpeg</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">png</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">css</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">shell</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">ico</span><span style="color:#24292E;">)$ </span><span style="color:#032F62;">{</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">root</span><span style="color:#24292E;">           </span><span style="color:#032F62;">html/static/</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 图片防盗链</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">location</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/static/.</span><span style="color:#005CC5;">*</span><span style="color:#005CC5;">\\.</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">jpg</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">jpeg</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">png</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">gif</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">webp</span><span style="color:#24292E;">)$ </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">root</span><span style="color:#24292E;">              </span><span style="color:#032F62;">html</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">valid_referers</span><span style="color:#24292E;">    </span><span style="color:#005CC5;">*</span><span style="color:#032F62;">.deeruby.com</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> ($invalid_referer) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">          </span><span style="color:#005CC5;">403</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 访问限制</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">location</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/static</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">root</span><span style="color:#24292E;">               </span><span style="color:#032F62;">html</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># allow 允许</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">allow</span><span style="color:#24292E;">              </span><span style="color:#005CC5;">39</span><span style="color:#032F62;">.xxx.xxx.xxx</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># deny  拒绝</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">deny</span><span style="color:#24292E;">               </span><span style="color:#032F62;">all</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="pc端和移动端使用不同的项目文件映射" tabindex="-1">PC端和移动端使用不同的项目文件映射 <a class="header-anchor" href="#pc端和移动端使用不同的项目文件映射" aria-label="Permalink to &quot;PC端和移动端使用不同的项目文件映射&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">......</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">root</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/home/static/pc</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> ($http_user_agent </span><span style="color:#F97583;">~*</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;(mobile|android|iphone|ipad|phone)&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">root</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/home/static/mobile</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">index</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">index.html</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">server</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">......</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">location</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">root</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/home/static/pc</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> ($http_user_agent </span><span style="color:#D73A49;">~*</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;(mobile|android|iphone|ipad|phone)&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">root</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/home/static/mobile</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">index</span><span style="color:#24292E;"> </span><span style="color:#032F62;">index.html</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="一个web服务-配置多个项目-location-匹配路由区别" tabindex="-1">一个web服务，配置多个项目 (location 匹配路由区别) <a class="header-anchor" href="#一个web服务-配置多个项目-location-匹配路由区别" aria-label="Permalink to &quot;一个web服务，配置多个项目 (location 匹配路由区别)&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">listen</span><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">80</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">server_name</span><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">_</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 主应用</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">root</span><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">html/main</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">index</span><span style="color:#E1E4E8;">               </span><span style="color:#9ECBFF;">index.html</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">try_files</span><span style="color:#E1E4E8;">           $uri $uri</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/index.html</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 子应用一</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">^~</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/store/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">proxy_pass</span><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">http://localhost:8001</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">proxy_redirect</span><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">off</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">proxy_set_header</span><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">Host</span><span style="color:#E1E4E8;"> $host;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">proxy_set_header</span><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">X-Real-IP</span><span style="color:#E1E4E8;"> $remote_addr;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">proxy_set_header</span><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">X-Forwarded-For</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">proxy_set_header</span><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">X-Forwarded-For</span><span style="color:#E1E4E8;"> $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 子应用二</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">^~</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/school/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">proxy_pass</span><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">http://localhost:8002</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">proxy_redirect</span><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">off</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">proxy_set_header</span><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">Host</span><span style="color:#E1E4E8;"> $host;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">proxy_set_header</span><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">X-Real-IP</span><span style="color:#E1E4E8;"> $remote_addr;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">proxy_set_header</span><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">X-Forwarded-For</span><span style="color:#E1E4E8;"> $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 静态资源读取不到问题处理</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">rewrite</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">^/api/profile/</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">.</span><span style="color:#E1E4E8;">*)$ </span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">替换成正确路径的文件的上一层目录</span><span style="color:#E1E4E8;">)</span><span style="color:#9ECBFF;">/</span><span style="color:#FFAB70;">$1</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">last</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 子应用一服务</span></span>
<span class="line"><span style="color:#B392F0;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">listen</span><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">8001</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">server_name</span><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">_</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">root</span><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">html/store</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">index</span><span style="color:#E1E4E8;">               </span><span style="color:#9ECBFF;">index.html</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">try_files</span><span style="color:#E1E4E8;">           $uri $uri</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/index.html</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">^~</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/store/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">alias</span><span style="color:#E1E4E8;">               </span><span style="color:#9ECBFF;">html/store/</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">index</span><span style="color:#E1E4E8;">               </span><span style="color:#9ECBFF;">index.html</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">index.htm</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">try_files</span><span style="color:#E1E4E8;">           $uri </span><span style="color:#9ECBFF;">/store/index.html</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 接口代理</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">location</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">/api</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">proxy_pass</span><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">http://localhost:8089</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 子应用二服务</span></span>
<span class="line"><span style="color:#B392F0;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">listen</span><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">8002</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">server_name</span><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">_</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">root</span><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">html/school</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">index</span><span style="color:#E1E4E8;">               </span><span style="color:#9ECBFF;">index.html</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">try_files</span><span style="color:#E1E4E8;">           $uri $uri</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/index.html</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">^~</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/school/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">alias</span><span style="color:#E1E4E8;">               </span><span style="color:#9ECBFF;">html/school/</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">index</span><span style="color:#E1E4E8;">               </span><span style="color:#9ECBFF;">index.html</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">index.htm</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">try_files</span><span style="color:#E1E4E8;">           $uri </span><span style="color:#9ECBFF;">/school/index.html</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 接口代理</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">location</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">/api</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">proxy_pass</span><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">http://localhost:10010</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">server</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">listen</span><span style="color:#24292E;">                </span><span style="color:#005CC5;">80</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">server_name</span><span style="color:#24292E;">           </span><span style="color:#032F62;">_</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 主应用</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">location</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">root</span><span style="color:#24292E;">          </span><span style="color:#032F62;">html/main</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">index</span><span style="color:#24292E;">               </span><span style="color:#032F62;">index.html</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">try_files</span><span style="color:#24292E;">           $uri $uri</span><span style="color:#032F62;">/</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/index.html</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 子应用一</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">location</span><span style="color:#24292E;"> </span><span style="color:#032F62;">^~</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/store/</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">proxy_pass</span><span style="color:#24292E;">          </span><span style="color:#032F62;">http://localhost:8001</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">proxy_redirect</span><span style="color:#24292E;">      </span><span style="color:#032F62;">off</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">proxy_set_header</span><span style="color:#24292E;">    </span><span style="color:#032F62;">Host</span><span style="color:#24292E;"> $host;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">proxy_set_header</span><span style="color:#24292E;">    </span><span style="color:#032F62;">X-Real-IP</span><span style="color:#24292E;"> $remote_addr;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">proxy_set_header</span><span style="color:#24292E;">    </span><span style="color:#032F62;">X-Forwarded-For</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">proxy_set_header</span><span style="color:#24292E;">    </span><span style="color:#032F62;">X-Forwarded-For</span><span style="color:#24292E;"> $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 子应用二</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">location</span><span style="color:#24292E;"> </span><span style="color:#032F62;">^~</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/school/</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">proxy_pass</span><span style="color:#24292E;">          </span><span style="color:#032F62;">http://localhost:8002</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">proxy_redirect</span><span style="color:#24292E;">      </span><span style="color:#032F62;">off</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">proxy_set_header</span><span style="color:#24292E;">    </span><span style="color:#032F62;">Host</span><span style="color:#24292E;"> $host;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">proxy_set_header</span><span style="color:#24292E;">    </span><span style="color:#032F62;">X-Real-IP</span><span style="color:#24292E;"> $remote_addr;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">proxy_set_header</span><span style="color:#24292E;">    </span><span style="color:#032F62;">X-Forwarded-For</span><span style="color:#24292E;"> $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 静态资源读取不到问题处理</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">rewrite</span><span style="color:#24292E;"> </span><span style="color:#032F62;">^/api/profile/</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">.</span><span style="color:#24292E;">*)$ </span><span style="color:#032F62;">/</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">替换成正确路径的文件的上一层目录</span><span style="color:#24292E;">)</span><span style="color:#032F62;">/</span><span style="color:#E36209;">$1</span><span style="color:#24292E;"> </span><span style="color:#032F62;">last</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 子应用一服务</span></span>
<span class="line"><span style="color:#6F42C1;">server</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">listen</span><span style="color:#24292E;">                </span><span style="color:#005CC5;">8001</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">server_name</span><span style="color:#24292E;">           </span><span style="color:#032F62;">_</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">location</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">root</span><span style="color:#24292E;">          </span><span style="color:#032F62;">html/store</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">index</span><span style="color:#24292E;">               </span><span style="color:#032F62;">index.html</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">try_files</span><span style="color:#24292E;">           $uri $uri</span><span style="color:#032F62;">/</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/index.html</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">location</span><span style="color:#24292E;"> </span><span style="color:#032F62;">^~</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/store/</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">alias</span><span style="color:#24292E;">               </span><span style="color:#032F62;">html/store/</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">index</span><span style="color:#24292E;">               </span><span style="color:#032F62;">index.html</span><span style="color:#24292E;"> </span><span style="color:#032F62;">index.htm</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">try_files</span><span style="color:#24292E;">           $uri </span><span style="color:#032F62;">/store/index.html</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 接口代理</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">location</span><span style="color:#24292E;">  </span><span style="color:#032F62;">/api</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">proxy_pass</span><span style="color:#24292E;">          </span><span style="color:#032F62;">http://localhost:8089</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 子应用二服务</span></span>
<span class="line"><span style="color:#6F42C1;">server</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">listen</span><span style="color:#24292E;">                </span><span style="color:#005CC5;">8002</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">server_name</span><span style="color:#24292E;">           </span><span style="color:#032F62;">_</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">location</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">root</span><span style="color:#24292E;">          </span><span style="color:#032F62;">html/school</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">index</span><span style="color:#24292E;">               </span><span style="color:#032F62;">index.html</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">try_files</span><span style="color:#24292E;">           $uri $uri</span><span style="color:#032F62;">/</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/index.html</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">location</span><span style="color:#24292E;"> </span><span style="color:#032F62;">^~</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/school/</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">alias</span><span style="color:#24292E;">               </span><span style="color:#032F62;">html/school/</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">index</span><span style="color:#24292E;">               </span><span style="color:#032F62;">index.html</span><span style="color:#24292E;"> </span><span style="color:#032F62;">index.htm</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">try_files</span><span style="color:#24292E;">           $uri </span><span style="color:#032F62;">/school/index.html</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 接口代理</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">location</span><span style="color:#24292E;">  </span><span style="color:#032F62;">/api</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">proxy_pass</span><span style="color:#24292E;">          </span><span style="color:#032F62;">http://localhost:10010</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="配置负载均衡" tabindex="-1">配置负载均衡 <a class="header-anchor" href="#配置负载均衡" aria-label="Permalink to &quot;配置负载均衡&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">upstream</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">my_upstream</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">server</span><span style="color:#E1E4E8;">                </span><span style="color:#9ECBFF;">http://localhost:9001</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">server</span><span style="color:#E1E4E8;">                </span><span style="color:#9ECBFF;">http://localhost:9002</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">server</span><span style="color:#E1E4E8;">                </span><span style="color:#9ECBFF;">http://localhost:9003</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">listen</span><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">9000</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">server_name</span><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">test.com</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">proxy_pass</span><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">my_upstream</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">proxy_set_header</span><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">Host</span><span style="color:#E1E4E8;"> $proxy_host;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">proxy_set_header</span><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">X-Real-IP</span><span style="color:#E1E4E8;"> $remote_addr;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">proxy_set_header</span><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">X-Forwarded-For</span><span style="color:#E1E4E8;"> $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">upstream</span><span style="color:#24292E;"> </span><span style="color:#032F62;">my_upstream</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">server</span><span style="color:#24292E;">                </span><span style="color:#032F62;">http://localhost:9001</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">server</span><span style="color:#24292E;">                </span><span style="color:#032F62;">http://localhost:9002</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">server</span><span style="color:#24292E;">                </span><span style="color:#032F62;">http://localhost:9003</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">server</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">listen</span><span style="color:#24292E;">                </span><span style="color:#005CC5;">9000</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">server_name</span><span style="color:#24292E;">           </span><span style="color:#032F62;">test.com</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">location</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">proxy_pass</span><span style="color:#24292E;">          </span><span style="color:#032F62;">my_upstream</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">proxy_set_header</span><span style="color:#24292E;">    </span><span style="color:#032F62;">Host</span><span style="color:#24292E;"> $proxy_host;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">proxy_set_header</span><span style="color:#24292E;">    </span><span style="color:#032F62;">X-Real-IP</span><span style="color:#24292E;"> $remote_addr;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">proxy_set_header</span><span style="color:#24292E;">    </span><span style="color:#032F62;">X-Forwarded-For</span><span style="color:#24292E;"> $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="ssl-配置-https" tabindex="-1">SSL 配置 HTTPS <a class="header-anchor" href="#ssl-配置-https" aria-label="Permalink to &quot;SSL 配置 HTTPS&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">listen</span><span style="color:#E1E4E8;">                      </span><span style="color:#79B8FF;">80</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">server_name</span><span style="color:#E1E4E8;">                 </span><span style="color:#9ECBFF;">www.xxx.com</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># 将 http 重定向转移到 https</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">301</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://</span><span style="color:#E1E4E8;">$server_name$request_uri;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">server</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">listen</span><span style="color:#E1E4E8;">                      </span><span style="color:#79B8FF;">443</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ssl</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">server_name</span><span style="color:#E1E4E8;">                 </span><span style="color:#9ECBFF;">www.xxx.com</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">ssl_certificate</span><span style="color:#E1E4E8;">             </span><span style="color:#9ECBFF;">/etc/nginx/ssl/www.xxx.com.pem</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">ssl_certificate_key</span><span style="color:#E1E4E8;">         </span><span style="color:#9ECBFF;">/etc/nginx/ssl/www.xxx.com.key</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">ssl_session_timeout</span><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">10</span><span style="color:#9ECBFF;">m</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">ssl_ciphers</span><span style="color:#E1E4E8;">                 </span><span style="color:#9ECBFF;">ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">ssl_protocols</span><span style="color:#E1E4E8;">               </span><span style="color:#9ECBFF;">TLSv1</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">TLSv1.1</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">TLSv1.2</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">ssl_prefer_server_ciphers</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">on</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">root</span><span style="color:#E1E4E8;">                    </span><span style="color:#9ECBFF;">/project/xxx</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">index</span><span style="color:#E1E4E8;">                   </span><span style="color:#9ECBFF;">index.html</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">index.htm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">index.md</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">try_files</span><span style="color:#E1E4E8;">               $uri $uri</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/index.html</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">server</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">listen</span><span style="color:#24292E;">                      </span><span style="color:#005CC5;">80</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">server_name</span><span style="color:#24292E;">                 </span><span style="color:#032F62;">www.xxx.com</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># 将 http 重定向转移到 https</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">301</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://</span><span style="color:#24292E;">$server_name$request_uri;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">server</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">listen</span><span style="color:#24292E;">                      </span><span style="color:#005CC5;">443</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ssl</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">server_name</span><span style="color:#24292E;">                 </span><span style="color:#032F62;">www.xxx.com</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">ssl_certificate</span><span style="color:#24292E;">             </span><span style="color:#032F62;">/etc/nginx/ssl/www.xxx.com.pem</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">ssl_certificate_key</span><span style="color:#24292E;">         </span><span style="color:#032F62;">/etc/nginx/ssl/www.xxx.com.key</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">ssl_session_timeout</span><span style="color:#24292E;">         </span><span style="color:#005CC5;">10</span><span style="color:#032F62;">m</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">ssl_ciphers</span><span style="color:#24292E;">                 </span><span style="color:#032F62;">ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">ssl_protocols</span><span style="color:#24292E;">               </span><span style="color:#032F62;">TLSv1</span><span style="color:#24292E;"> </span><span style="color:#032F62;">TLSv1.1</span><span style="color:#24292E;"> </span><span style="color:#032F62;">TLSv1.2</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">ssl_prefer_server_ciphers</span><span style="color:#24292E;">   </span><span style="color:#032F62;">on</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">location</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">root</span><span style="color:#24292E;">                    </span><span style="color:#032F62;">/project/xxx</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">index</span><span style="color:#24292E;">                   </span><span style="color:#032F62;">index.html</span><span style="color:#24292E;"> </span><span style="color:#032F62;">index.htm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">index.md</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">try_files</span><span style="color:#24292E;">               $uri $uri</span><span style="color:#032F62;">/</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/index.html</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><hr><h3 id="nginx-跨域主要涉及4个响应头" tabindex="-1">nginx 跨域主要涉及4个响应头： <a class="header-anchor" href="#nginx-跨域主要涉及4个响应头" aria-label="Permalink to &quot;nginx 跨域主要涉及4个响应头：&quot;">​</a></h3><p>Access-Control-Allow-Origin 用于设置允许跨域请求源地址 （预检请求和正式请求在跨域时候都会验证）</p><p>Access-Control-Allow-Headers 跨域允许携带的特殊头信息字段 （只在预检请求验证）</p><p>Access-Control-Allow-Methods 跨域允许的请求方法或者说HTTP动词 （只在预检请求验证）</p><p>Access-Control-Allow-Credentials 是否允许跨域使用cookies，如果要跨域使用cookies，可以添加上此请求响应头，值设为true（设置或者不设置，都不会影响请求发送，只会影响在跨域时候是否要携带cookies，但是如果设置，预检请求和正式请求都需要设置）。不过不建议跨域使用（项目中用到过，不过不稳定，有些浏览器带不过去），除非必要，因为有很多方案可以代替。</p>`,119),e=[o];function t(c,r,E,y,i,F){return n(),a("div",null,e)}const h=s(p,[["render",t]]);export{C as __pageData,h as default};
